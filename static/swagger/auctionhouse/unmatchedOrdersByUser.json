{
  "get": {
    "operationId": "getUnmatchedOrdersByUser",
    "summary": "Get unmatched orders by user.",
    "description": "Retrieves all unmatched orders for a specific user, identified by their unique address, with optional pagination. It returns the orders that have been initiated but not yet picked up by `Orderbook`.",
    "servers": [
      {
        "url": "https://orderbook.garden.finance",
        "description": "Testnet - Auth, Gasless, Orderbook server"
      },
      {
        "url": "https://orderbookv2.garden.finance",
        "description": "Mainnet - Auth, Gasless, Orderbook server"
      }
    ],
    "parameters": [
      {
        "name": "user",
        "in": "path",
        "required": true,
        "description": "The user's address.",
        "schema": {
          "type": "string",
          "example": "0x1d2e6f517b2c8fbd8a4bfa31f6a9433ff4a84b2e"
        }
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "Page number for pagination.",
        "schema": {
          "type": "integer",
          "default": 1,
          "example": 1
        }
      },
      {
        "name": "per_page",
        "in": "query",
        "required": false,
        "description": "Number of items per page.",
        "schema": {
          "type": "integer",
          "default": 10,
          "example": 10
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successfully retrieved unmatched orders.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "Ok",
                    "Error"
                  ],
                  "example": "Ok",
                  "description": "An enum representing the possible outcomes of the endpoint, indicating whether the request was successful."
                },
                "result": {
                  "$ref": "./components/schemas.json#/components/schemas/PaginatedCreateOrders"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request due to invalid parameters.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "Ok",
                    "Error"
                  ],
                  "example": "Error",
                  "description": "An enum representing the possible outcomes of the endpoint, indicating whether the request was successful."
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "description": "The numeric status code indicating the type of error or response.",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "description": "A descriptive message providing details about the error or response."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "Orderbook"
    ]
  }
}