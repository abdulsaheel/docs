{
  "openapi": "3.0.0",
  "info": {
    "title": "Garden API",
    "version": "2.0.3"
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.garden.finance/testnet/orders",
      "description": "Testnet - Auth, Gasless, Orderbook server"
    },
    {
      "url": "https://api.garden.finance/testnet/prices",
      "description": "Testnet - Quote server"
    },
    {
      "url": "https://api.garden.finance/mainnet/orders",
      "description": "Mainnet - Auth, Gasless, Orderbook server"
    },
    {
      "url": "https://api.garden.finance/mainnet/prices",
      "description": "Mainnet - Quote server"
    },
    {
      "url": "https://api.garden.finance/mainnet/info",
      "description": "Mainnet - Info server"
    },
    {
      "url": "https://api.garden.finance/testnet/info",
      "description": "Testnet - Info server"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Auth",
      "x-displayName": "Auth",
      "description": "The Auth API provides a secure and seamless authentication mechanism using the Sign-In with Ethereum (<a target=\"_blank\" href=\"https://eips.ethereum.org/EIPS/eip-4361\"><b>SIWE</b></a>) protocol. The /auth/nonce endpoint generates a unique, one-time-use `nonce` to ensure integrity and prevent replay attacks. Users sign a message containing this nonce and relevant metadata with their Ethereum private key. The signed message is then submitted to the /auth/verify endpoint, which `validates` the signature and confirms the user's identity without compromising their private key.\n\n> **Note:** You can obtain an API key through either the Auth section or the Dev Dashboard."
    },
    {
      "name": "Quote",
      "x-displayName": "Quote",
      "description": "The Quote API provides a suite of endpoints designed to facilitate `real-time pricing`, `attested quotes`, and Garden's `quotes` for cross-chain swaps. It includes endpoints such as /fiat, which offers the current USD price for a given order pair, and /quote/attested, providing a time-sensitive quote valid until a specific point. The /quote/strategies endpoint lists available strategies for swaps, while /price requests the quote server for the price of a particular order pair and amount."
    },
    {
      "name": "Orderbook",
      "x-displayName": "Orderbook",
      "description": "The Orderbook API provides robust endpoints for managing and tracking orders in the Garden ecosystem. It allows users to query both `unmatched` and `matched` orders, filtered by all, specific `user ID`s, or `order ID`s. Unmatched orders represent those initiated by users but not yet picked up by the Orderbook, while matched orders signify successful solver allocation."
    },
    {
      "name": "Gasless",
      "x-displayName": "Gasless",
      "description": "The Gasless API group streamlines the order lifecycle by offering endpoints for `order initiation`, `settlement`, `creation`, and `instant refunds`, all secured with `authentication`. This group eliminates the need for users to manage gas fees, enhancing accessibility and ease of use. By facilitating `HTLC`-based fund redemption and instant cancellations, it ensures a seamless, trustless, and user-friendly experience for cross-chain transactions."
    },
    {
      "name": "Info",
      "x-displayName": "Info",
      "description": "The Assets API provides detailed information about `supported networks` and `assets` within the Garden ecosystem. It allows users to query available networks, including their chain ID, filler addresses, logos, explorers, and network types. Additionally, it lists asset configurations for each network, including token details such as name, symbol, decimals, base fees, logo, token address, and atomic swap address."
    }
  ],
  "paths": {
    "/auth/nonce": {
      "$ref": "./auth/nonce.json"
    },
    "/auth/verify": {
      "$ref": "./auth/verify.json"
    },
    "/gasless/order/initiate": {
      "$ref": "./relayer/initiateSwapWithSign.json"
    },
    "/gasless/order/settlement": {
      "$ref": "./relayer/redeemSwap.json"
    },
    "/gasless/order": {
      "$ref": "./relayer/createOrder.json"
    },
    "/gasless/order/refund": {
      "$ref": "./relayer/instantRefund.json"
    },
    "/health": {
      "$ref": "./relayer/checkHealth.json"
    },
    "/orders/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrders.json"
    },
    "/orders/matched": {
      "$ref": "./auctionhouse/matchedOrders.json"
    },
    "/orders/id/{id}/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrdersById.json"
    },
    "/orders/id/{id}/matched": {
      "$ref": "./auctionhouse/matchedOrdersById.json"
    },
    "/orders/user/{user}/unmatched": {
      "$ref": "./auctionhouse/unmatchedOrdersByUser.json"
    },
    "/orders/user/{user}/matched": {
      "$ref": "./auctionhouse/matchedOrdersByUser.json"
    },
    "/orders/user/{user}/count": {
      "$ref": "./auctionhouse/ordersCountByUser.json"
    },
    "/fiat": {
      "$ref": "./quote/fiat.json"
    },
    "/quote/attested": {
      "$ref": "./quote/quote.json"
    },
    "/quote/strategies": {
      "$ref": "./quote/strategies.json"
    },
    "/price": {
      "$ref": "./quote/price.json"
    },
    "/assets": {
      "$ref": "./info/assets.json"
    }
  }
}