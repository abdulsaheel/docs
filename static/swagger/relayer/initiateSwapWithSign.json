{
    "post": {
        "operationId": "initiateSwapWithSign",
        "summary": "Intiates a swap with signature.",
        "description": "Performs all the required validation checks to ensure the swap request is valid and meets the necessary conditions. After successful verification, it sends the swap request to the executor, triggering the execution of the token swap based on the provided parameters and conditions.",
        "servers": [
            {
                "url": "https://api.garden.finance/testnet/orderbook",
                "description": "Testnet - Auth, Gasless, Orderbook server"
            },
            {
                "url": "https://api.garden.finance/mainnet/orderbook",
                "description": "Mainnet - Auth, Gasless, Orderbook server"
            }
        ],
        "security": [
            {
                "bearer": []
            }
        ],
        "requestBody": {
            "required": true,
            "content": {
                "application/json": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "order_id": {
                                "type": "string",
                                "description": "The unique order ID",
                                "example": "ee0397d...5aed66ffb0a0ede00e86d0446d468e681cf0b6166fcc413dafe"
                            },
                            "signature": {
                                "type": "string",
                                "description": "The signature for the swap",
                                "example": "0xe71e...22220bb369c7db189d749b6d34d4b444f863b6bafa1ab107b07031e465b652e2959b73de0ea1700d2414734dea44a04eb20b8bf85c178604b6b461b"
                            },
                            "perform_on": {
                                "type": "string",
                                "enum": [
                                    "Source",
                                    "Destination"
                                ],
                                "description": "Indicates where the swap should be performed",
                                "example": "Source"
                            }
                        },
                        "required": [
                            "order_id",
                            "signature",
                            "perform_on"
                        ]
                    }
                }
            }
        },
        "responses": {
            "200": {
                "description": "Swap initiated successfully",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Ok",
                                        "Error"
                                    ],
                                    "description": "An enum representing the possible outcomes of the endpoint, indicating whether the request was successful.",
                                    "example": "Ok"
                                },
                                "result": {
                                    "type": "string",
                                    "description": "Transaction hash",
                                    "example": "0x4e9f6b8c3a3d7b92e5f789cc83dfac35f6a12348b7d0e9c1a4e5b6a8f7c123d4"
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Ok",
                                        "Error"
                                    ],
                                    "description": "An enum representing the possible outcomes of the endpoint, indicating whether the request was successful.",
                                    "example": "Error"
                                },
                                "error": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number",
                                            "description": "The numeric status code indicating the type of error or response.",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "A descriptive message providing details about the error or response.",
                                            "example": "Order already initiated."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "401": {
                "description": "Bad request - Unauthorized"
            },
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Ok",
                                        "Error"
                                    ],
                                    "description": "An enum representing the possible outcomes of the endpoint, indicating whether the request was successful.",
                                    "example": "Error"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Error message",
                                    "example": "internal error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "tags": [
            "Gasless"
        ]
    }
}