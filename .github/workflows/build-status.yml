name: Build Status

on: 
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
      ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
      ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Node.js Environment Setup
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Setup yarn
        run: |
          corepack enable
          yarn set version 4.5.1

      - name: Install Dependencies
        run: |
          yarn install --mode=update-lockfile
          yarn link

      - name: Get Latest Version
        id: version
        run: |
          LATEST_VERSION=$(ls versioned_docs | grep -E "version-[0-9]+\.[0-9]+\.[0-9]+" | sort -V | tail -n 1 || echo "version-2.0.0")
          CURRENT_VERSION=$(echo $LATEST_VERSION | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_MSG_LOWER=$(echo "$COMMIT_MSG" | tr '[:upper:]' '[:lower:]')
          
          if echo "$COMMIT_MSG_LOWER" | grep -q "feat:"; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif echo "$COMMIT_MSG_LOWER" | grep -q "fix:"; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif echo "$COMMIT_MSG_LOWER" | grep -q "chore:"; then
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      

      - name: Create New Version
        run: yarn docusaurus docs:version ${{ steps.version.outputs.new_version }}

      - name: Commit New Version
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add versioned_sidebars/ versioned_docs/ versions.json
          git commit -m "docs: Add new version ${{ steps.version.outputs.new_version }}"
          git push